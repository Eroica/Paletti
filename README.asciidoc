= Paletti

image::Paletti.png[]

Drop an image into Paletti, and it generates a color palette of its dominant colors.

Click on a color tile to copy its Hex code into the clipboard.

You can scroll over the palette to increase/decrease its size.
The size is currently restricted to 6 to 32 colors.

Paletti uses http://leptonica.org/[Leptonica] to segment the colors.
You can save the segmented image separately, or copy it into the clipboard.

== Shortcuts

.Shortcuts
|===
|Combination |Action

|Ctrl+O
|Open an image

|Ctrl+S
|Export current image

|Ctrl+C
|Copy current image into clipboard

|x
|Toggle between black/white and colored segmentation

|Ctrl+? +
Ctrl+F1|Open Shortcuts window
|===

== Installation

An AppImage is available under https://github.com/Eroica/Paletti/releases[Releases]. https://docs.appimage.org/user-guide/faq.html[(What is an AppImage?)]

== Building

Paletti requires Leptonica which you can probably install using your distribution's package manager, e.g. `leptonica-devel`. The library is abbreviated as `lept`.

With Leptonica installed, you can build Paletti with Meson (`meson build`) preferably into `build/`. The AppImage is generated by a simple Makefile inside `dist/`.

'''

There is an old version of Paletti (1.1) that I built with Kotlin and JavaFX when I was using Windows.
The old version simply used https://lokeshdhakar.com/projects/color-thief/[color-thief] inside a WebView.

This newer version (2.0+) is written in Vala and GTK since I wanted to use Paletti natively on my new machine.
I archived the old JavaFX version into a https://github.com/Eroica/Paletti/tree/JavaFX-WebView-1.1[separate branch `JavaFX-WebView-1.1`], and a precompiled Windows binary is available from the Releases (v1.1).
